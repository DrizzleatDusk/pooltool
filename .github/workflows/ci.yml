name: CI

on:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8' # Choose the Python version you need
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Pytest
      id: pytest_check
      run: |
        pytest || { echo "##[error]Pytest failed"; echo "::set-output name=status::failed"; }

    - name: Pyright
      id: pyright_check
      run: |
        pyright --project ./pyrightconfig.ci.json || { echo "##[error]Pyright failed"; echo "::set-output name=status::failed"; }

    - name: Ruff
      id: ruff_check
      run: |
        ruff check . || { echo "##[error]Ruff format compliance failed"; echo "::set-output name=status::failed"; }

    - name: isort
      id: isort_check
      run: |
        isort . --check-only || { echo "##[error]isort format compliance failed"; echo "::set-output name=status::failed"; }

    - name: Test results
      if: always()
      run: |
        passed=()
        failed=()
        
        if [[ "${{ steps.pytest_check.outputs.status }}" == "failed" ]]; then
          failed+=("pytest")
        else
          passed+=("pytest")
        fi
        
        if [[ "${{ steps.pyright_check.outputs.status }}" == "failed" ]]; then
          failed+=("pyright")
        else
          passed+=("pyright")
        fi
        
        if [[ "${{ steps.ruff_check.outputs.status }}" == "failed" ]]; then
          failed+=("ruff")
        else
          passed+=("ruff")
        fi
        
        if [[ "${{ steps.isort_check.outputs.status }}" == "failed" ]]; then
          failed+=("isort")
        else
          passed+=("isort")
        fi

        echo "PASSED:"
        for check in "${passed[@]}"; do
          echo "    - $check"
        done
        
        echo "FAILED:"
        for check in "${failed[@]}"; do
          echo "    - $check"
        done
        
        if [ ${#failed[@]} -ne 0 ]; then
          exit 1
        fi
