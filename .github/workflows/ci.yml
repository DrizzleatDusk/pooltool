name: CI

on:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8' # Choose the Python version you need
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run Pytest
      id: pytest_check
      run: |
        pytest || { echo "##[error]Pytest failed"; echo "::set-output name=status::failed"; }

    - name: Run Pyright type checking
      id: pyright_check
      run: |
        pyright --project ./pyrightconfig.ci.json || { echo "##[error]Pyright failed"; echo "::set-output name=status::failed"; }

    - name: Check compliance with Ruff
      id: ruff_check
      run: |
        ruff check . || { echo "##[error]Ruff format compliance failed"; echo "::set-output name=status::failed"; }

    - name: Check compliance with isort
      id: isort_check
      run: |
        isort . --check-only || { echo "##[error]isort format compliance failed"; echo "::set-output name=status::failed"; }

    - name: Test results
      if: always()
      run: |
        status=0
        if [[ "${{ steps.pytest_check.outputs.status }}" == "failed" ]]; then
          echo "Pytest failed"
          status=1
        fi
        if [[ "${{ steps.pyright_check.outputs.status }}" == "failed" ]]; then
          echo "Pyright failed"
          status=1
        fi
        if [[ "${{ steps.ruff_check.outputs.status }}" == "failed" ]]; then
          echo "Ruff failed"
          status=1
        fi
        if [[ "${{ steps.isort_check.outputs.status }}" == "failed" ]]; then
          echo "isort failed"
          status=1
        fi
        exit $status
